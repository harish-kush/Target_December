class Solution {
public:

    /*
    3 cases h 1_day, 7_days, 30_days pass 
    agr 1 day h toh cost[0] + idx ko 1 bdaa do 
    agr 7 days ka pass h toh check kro ki kon kon se days uss pass me cover ho skte h
    similiary check for 30 days 
    and last return the min value of 3 of them 
     */
    int helper(vector<int>& days, vector<int>& costs,int i,vector<int>& dp){
        if(i>=days.size()) return 0;

        if(dp[i]!=-1) return dp[i];

        // one day pass
        int one_day = costs[0] + helper(days,costs,i+1,dp);

        // 7 days pass
        int next_idx = i;
        while(next_idx<days.size() && days[next_idx]<days[i]+7 ) next_idx++;
        int seven_day = costs[1] + helper(days,costs,next_idx,dp);

        // 30 days pass
        while(next_idx<days.size() && days[next_idx]<days[i]+30 ) next_idx++;
        int thirty_day = costs[2] + helper(days,costs,next_idx,dp);

        return dp[i] = min(one_day,min(seven_day,thirty_day));
    }
    int mincostTickets(vector<int>& days, vector<int>& costs) {
        int n = days.size();
        vector<int>dp(n+1,-1);
        return helper(days,costs,0,dp);
    }
};
