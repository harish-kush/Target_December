class Solution {
public:
    typedef pair<int,int> pi;
    vector<int> getFinalState(vector<int>& nums, int k, int multiplier) {
        priority_queue<pi , vector<pi> , greater<pi>>pq;
        int n = nums.size();
        for(int i=0;i<n;i++){
            pq.push({nums[i],i});
        }
        while(k--){
            auto x = pq.top();
            pq.pop();
            x.first*=multiplier;
            pq.push(x);
        }
        for(int i=0;i<n;i++){
            nums[pq.top().second] = pq.top().first;
            pq.pop();
        }
        return nums;
    }
};
